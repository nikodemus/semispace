					------
					SemiSpace in webapp
					------
					
~~~~~~~~~~~~~~~~~~~
DEPRECATED; SemiSpace in webapp
~~~~~~~~~~~~~~~~~~~

 What may be confusing in this tutorial are all the 
 different configuration permutations. It is just a
 question of what kind of scenario you want to address.
 
~~~~~~~~~~~~~~~~~~~
* Install Geronimo
~~~~~~~~~~~~~~~~~~~

 It is presumed that you have a webapp container available.
 {{{http://geronimo.apache.org}Geronimo}} is presumed used
 for this tutorial. The tutorial is tested with Geronimo-1.1.1
 running with Tomcat.
 
~~~~~~~~~~~~~~~~~~~
** Deploy semispace-war
~~~~~~~~~~~~~~~~~~~
 
 You need to deploy semispace-war. How to deploy, etc, is covered
 on {{{http://geronimo.apache.org}geronimo.apache.org.}}
 
 The webapp is spring configured to use the 
 {{{../../semispace-war/index.html}semispace-war,}} and it is 
 presumed that <<<http://localhost:8080/semispace-war/services/space>>>
 offers a web services interface. It is in other words necessary to
 deploy the semispace-war first.

 In order to test the connection with {{{../spacepad/index.html}spacepad,}}
 start spacepad with 
 
------------------------
spacepad.sh http://localhost:8080/semispace-war/services/space
------------------------
 
 This should give the same result as the 
 {{{spacepad.html}previous}} chapter.
 
 Keep spacepad running throughout this chapter, if you like. This will
 give you errors in the long at the time the SemiSpace is unavailable, 
 but should otherwise work fine. Spacepad is not created for stability
 of operation, though, so you may need or want to restart it. 
 
 <b>Warning</b>: If you happened to start spacepad without
 arguments, i.e. Terracotta-configured, you need to stop
 both the terracotta-server, and spacepad. This is due to 
 problems explained in 
 {{{terraconfig.html}the Terracotta chapter.}}
 
~~~~~~~~~~~~~~~~~~~
** Deploy spacewar
~~~~~~~~~~~~~~~~~~~

 Deploy spacewar from the tutorials. Examine the web page
 http://localhost:8080/spacewar/spacepad.html
 
 You should see a page, with two menu options: spacepad and
 counter. The spacepad menu option will present the contents
 of spacepad, and the second takes an object out of the space, 
 counts up a number, and puts it back.
 
 The counter object has a timeout, and will therefore disappear
 if it has not been accessed within the timeout period. This is
 quite similar to the behavior of a session object, and can, together
 with a cookie, be used to maintain client data across servers.
 
 Try to modify something in spacepad, and see the web page 
 change.

~~~~~~~~~~~~~~~~~~~
*** Internal webservices communication 
~~~~~~~~~~~~~~~~~~~
 
 The interesting, and important bit about the <<<spacewar>>> webapp, is that
 it is configured to talk internally to <<<semispace-war.>>> This is
 obtained with the following configuration in the <<<applicationContext.xml:>>>
   
%{snippet|id=localWebservices|file=semispace-tutorials/spacewar/src/main/resources/applicationContext.xml}

 Naturally, you could also just integrate SemiSpace in the same manner as  
 <<<semispace-war>>> does. Just notice that, you will have to configure
 up separate roots if you are going to use more than one instance of 
 SemiSpace per server.
 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
Clustering Geronimo with Terracotta
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 This is not session clustering:
 You may want to adjust your configuration file if you
 want to take advantage of terracotta in other parts
 of your program. 
 
 If you have a Geronimo instance running, you will have to
 stop it first.
 
 Start up the Terracotta server with the configuration file for 
 SemiSpace, if you have not already:
 
+------------------------------------+
$TC_INSTALL_DIR/bin/start-tc-server.sh -ftc-config.xml
+------------------------------------+
 
 Then go to your Geronimo installation
 and start Geronimo up with Terracotta:
 
+------------------------------------+
cd $GERONIMO_HOME/bin
$TC_INSTALL_DIR/bin/dso-java.sh -Dtc.config=$TC_CONFIG_PATH -jar server.jar
+------------------------------------+

 If you need, or want, to, supply more configuration options to 
 dos-java.sh. such as:
 
+------------------------------------+
-Xmx712m -Xms256m -XX:PermSize=128m -XX:MaxPermSize=256m -XX:NewSize=64m -XX:MaxNewSize=128m
+------------------------------------+

 During startup, you should see a line similar to:
 
+------------------------------------+
Terracotta 2.5.2, as of 20080218-120204 (Revision 7031 by cruise@rh4mo0 from 2.5)
+------------------------------------+

~~~~~~~~~~~~~~~~~~~
* Examine Geronimo behavior
~~~~~~~~~~~~~~~~~~~

 After having become familiar to the workings of the spacewar web pages, try
 to stop Geronimo. When it has stopped, start it again.
 
 If you access the "counter"-page, you should see the number increase, <as
 if the server has not been stopped at all.>
 
 The spacepad page works as before, as it just queries the spacepad that
 considers itself administrator. 
 
~~~~~~~~~~~~~~~~~~~
* Common problems
~~~~~~~~~~~~~~~~~~~

 Unfortunately, running Geronimo with Terracotta is susceptible to problems
 with redeployment. If you redeploy semispace-war, and experience problems, 
 you need to 
 
 * stop Geronimo
 
 * start the webapp (which has status stopped) 
 
 []
 
 If that does not do the trick, you need to undeploy and stop both 
 Terracotta and Geronimo.
 
 If you have used the Terracotta server before starting Geronimo, you need to 
 restart it.
 