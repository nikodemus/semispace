<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">

	<!--START SNIPPET: springWebservicesConfig -->
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

	<!--
		Definition of an unauthenticated space. Useful if you are
		within a firewall, or otherwise do not expose the
		service to the world. 
	-->
	<jaxws:endpoint id="space" implementor="#spaceproxy"
		address="/space" />

	<bean id="spaceproxy"
		class="org.semispace.ws.WsSpaceImpl">
		<property name="space">
			<ref bean="semispace" />
		</property>
	</bean>
	<!--END SNIPPET: springWebservicesConfig -->

	<!--START SNIPPET: springAppContextConfiguration -->
	<!-- 
		The space itself. It may be distributed with terracotta, or
		be stand alone.
	-->
	<bean id="semispace" class="org.semispace.SemiSpace" scope="singleton"
		factory-method="retrieveSpace" />
	<!--END SNIPPET: springAppContextConfiguration -->

	<!--START SNIPPET: springMbeanServer -->
	<bean id="mbeanServer"
		class="org.springframework.jmx.support.MBeanServerFactoryBean">
		<!-- indicate to first look for a server -->
		<property name="locateExistingServerIfPossible" value="true" />
	</bean>
	<!--
		this bean needs to be eagerly pre-instantiated in order for the exporting to occur;
		this means that it must not be marked as lazily initialized
	-->
	<bean id="exporter"
		class="org.springframework.jmx.export.MBeanExporter">
		<property name="beans">
			<map>
				<entry key="bean:name=semiSpaceStatistics"
					value-ref="semispace" />
			</map>
		</property>
		<property name="server" ref="mbeanServer" />
	    <property name="assembler">
      	<bean class="org.springframework.jmx.export.assembler.MethodNameBasedMBeanInfoAssembler">
        	<property name="managedMethods">
          		<value>numberOfSpaceElements,numberOfBlockingRead,numberOfBlockingTake,numberOfMissedRead,numberOfMissedTake,numberOfNumberOfListeners,,numberOfRead,numberOfTake,numberOfWrite
			    </value>
        	</property>
      	</bean>
    </property>
	</bean>
	<!--END SNIPPET: springMbeanServer -->


	<!--
		Definition of an authenticated space. Useful if you are
		allowing external clients communicating with the service.
		
		Notice that you will probably want to write your own 
		implementation of the authenticator.
	-->
	<jaxws:endpoint id="tokenspace" implementor="#tokenspaceproxy"
		address="/tokenspace" />

	<bean id="tokenspaceproxy"
		class="org.semispace.ws.TokenWsSpaceImpl">
		<property name="space">
			<ref bean="semispace" />
		</property>
		<property name="tokenAuthenticator">
			<ref bean="tokenAuthenticator" />
		</property>
	</bean>

	<!-- 
		You probably want to write your own definition of the authenticator.
	-->
	<bean id="tokenAuthenticator"
		class="org.semispace.ws.TokenFromSpaceAuthenticator">
		<property name="space">
			<ref bean="semispace" />
		</property>
	</bean>
</beans>